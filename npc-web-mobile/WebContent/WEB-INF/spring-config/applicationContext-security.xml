<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<sec:global-method-security secured-annotations="disabled" jsr250-annotations="disabled" />

	<http auto-config="true" use-expressions="true" access-denied-page="/accessdenied.jspx" once-per-request="false">
		<intercept-url pattern="/login.*" filters="none" />
		<intercept-url pattern="/register*.*" filters="none" />
		<intercept-url pattern="/activate.*" filters="none" />
		<intercept-url pattern="/favicon.*" filters="none" />
		<intercept-url pattern="/application-locked.*" filters="none" />
		<intercept-url pattern="/remind/**" filters="none" />
		<intercept-url pattern="/script/**" filters="none" />
		<intercept-url pattern="/js/**" filters="none" />
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/img/**" filters="none" />
		<intercept-url pattern="/json/**" filters="none" />
		<intercept-url pattern="/struts/**" filters="none" />

		<!-- ADMIN -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />				
		
		<intercept-url pattern="/agent/**" access="hasAnyRole('ROLE_MEMBER')" />
		
		<intercept-url pattern="/download/**" access="permitAll" />

		<!-- DEFAULT -->
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/login.jspx" default-target-url="/index.jspx" authentication-failure-url="/login.jspx?login_error=1" />
		<logout logout-success-url="/login.jspx" />
		<remember-me key="sdfsdfsdfsdfsd" />
		<anonymous key="sdfsdfsdfsdfsd" granted-authority="ROLE_ANONYMOUS" username="Anonymous Coward" />
	</http>

   <authentication-manager alias="authenticationManager">
	    <authentication-provider ref="vasworksAuthenticationProvider" />
    </authentication-manager>

	<beans:bean id="userAction" scope="prototype" class="com.vasworks.security.action.UserAction">
		<beans:constructor-arg ref="userService" />
		<beans:property name="application" value="${application.securityId}" />
	</beans:bean>
	<beans:bean id="changePasswordAction" scope="prototype" class="com.vasworks.security.action.ChangePasswordAction">
		<beans:constructor-arg ref="userService" />
	</beans:bean>
	<beans:bean id="delegationAction" scope="prototype" class="com.vasworks.security.action.DelegationAction">
		<beans:constructor-arg ref="userService" />
	</beans:bean>
	<beans:bean id="userRemindUsernameAction" scope="prototype" class="com.vasworks.security.action.UserRemindUsername">
		<beans:constructor-arg ref="userService" />
	</beans:bean>
	<beans:bean id="userProfileAction" scope="prototype" class="com.vasworks.security.action.UserProfileAction">
		<beans:constructor-arg ref="userService" />
		<beans:property name="templatingService" ref="templatingService" />
		<beans:property name="emailService" ref="emailService" />
		<beans:property name="organizationService" ref="organizationService" />
	</beans:bean>
	<beans:bean id="userPreferencesAction" scope="request" class="com.vasworks.security.action.UserPreferencesAction">
		<beans:constructor-arg ref="userService" />
	</beans:bean>
	<beans:bean id="userInfoAction" scope="request" class="com.vasworks.security.action.UserInfoAction">
		<beans:constructor-arg ref="userService" />
	</beans:bean>

	<!-- Application lock -->
	<beans:bean id="applicationLockService" class="com.vasworks.security.service.impl.ApplicationLockServiceImpl" scope="singleton" />
	<beans:bean id="applockInterceptor" scope="singleton" class="com.vasworks.struts.interceptor.ApplicationLockInterceptor">
		<beans:constructor-arg ref="applicationLockService" />
	</beans:bean>

</beans:beans>